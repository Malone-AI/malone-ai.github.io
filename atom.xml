<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello, this is Malone!</title>
  
  <subtitle>Malone blog</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-25T16:57:19.169Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Malone</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pomopomo</title>
    <link href="http://example.com/2024/12/25/Pomopomo/"/>
    <id>http://example.com/2024/12/25/Pomopomo/</id>
    <published>2024-12-25T15:22:07.000Z</published>
    <updated>2024-12-25T16:57:19.169Z</updated>
    
    <content type="html"><![CDATA[<h1 id="番茄钟开发学习笔记"><a href="#番茄钟开发学习笔记" class="headerlink" title="番茄钟开发学习笔记"></a>番茄钟开发学习笔记</h1><h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><p>在DataWhale活动中，我使用豆包AI编程助手基于HTML和JavaScript开发了一个番茄钟应用。番茄钟是一种时间管理工具，通过分割工作时间和休息时间，提高工作效率和专注度。</p><h2 id="项目目标"><a href="#项目目标" class="headerlink" title="项目目标"></a>项目目标</h2><ul><li>设计简洁：界面简洁直观，用户友好。</li><li>功能完善：实现基本的番茄工作法功能，计时、暂停、重置和统计。</li><li>跨平台兼容：确保在不同浏览器和设备上正常运行。</li><li>代码优化：编写高效、可维护的代码，遵循最佳实践。</li></ul><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ul><li>前端：<ul><li>HTML5</li><li>CSS3</li><li>JavaScript (ES6)</li></ul></li><li>开发工具：<ul><li>Visual Studio Code</li><li>豆包AI编程助手</li></ul></li></ul><h2 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h2><ol><li>项目初始化<br>创建项目文件夹，初始化Git仓库。<br>结构如下：</li><li>设计界面<br>使用HTML构建基本结构，包括计时显示、控制按钮（开始、暂停、重置）。<br>使用CSS进行样式设计，确保界面响应式，适配不同屏幕尺寸。</li><li>实现计时功能<br>使用JavaScript实现倒计时逻辑。<br>处理开始、暂停、重置按钮的事件。</li><li>添加统计功能<br>记录完成的番茄钟次数。<br>使用localStorage保存数据，持久化统计信息。</li><li>优化用户体验<br>添加声音提醒。<br>实现暗模式和亮模式切换。<br>增加动画效果，提高交互性。</li></ol><h2 id="遇到的挑战与解决方案"><a href="#遇到的挑战与解决方案" class="headerlink" title="遇到的挑战与解决方案"></a>遇到的挑战与解决方案</h2><ol><li>定时器精度问题<br>挑战：使用setInterval可能导致计时不够精确，特别是在浏览器标签页不活跃时。</li></ol><p>解决方案：改用基于Date的计算，通过记录开始时间和当前时间差来精准计算剩余时间。</p><ol start="2"><li>响应式设计实现<br>挑战：确保应用在不同设备和屏幕尺寸下都能良好显示。</li></ol><p>解决方案：使用CSS媒体查询和弹性布局（Flexbox）优化布局，确保元素自适应调整。</p><ol start="3"><li>数据持久化<br>挑战：如何在用户关闭页面后保留统计数据。</li></ol><p>解决方案：利用localStorage在浏览器中存储完成的番茄钟次数，实现数据的持久化。</p><h1 id="学习收获"><a href="#学习收获" class="headerlink" title="学习收获"></a>学习收获</h1><ul><li>前端技能提升：通过项目实践，深入理解HTML、CSS和JavaScript的基本用法和高级技巧。</li><li>项目管理：学会使用Git进行版本控制，合理分配开发任务，保持代码整洁。</li><li>问题解决能力：在开发过程中遇到问题，通过查阅文档、寻求社区帮助，掌握了有效的解决问题的方法。</li><li>用户体验设计：了解用户需求，优化界面和交互，提高应用的易用性和用户满意度。</li></ul><h1 id="未来改进"><a href="#未来改进" class="headerlink" title="未来改进"></a>未来改进</h1><p>多语言支持：添加多种语言选择，提升国际用户体验。<br>数据可视化：使用图表展示工作与休息时间的分配情况。<br>用户账户系统：允许用户注册和登录，保存个性化设置和统计数据。<br>移动应用开发：将Web版番茄钟转化为移动应用，扩展使用场景。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过本次项目，我不仅实践了前端开发的基本技能，还提高了我的项目管理和问题解决能力。通过使用豆包AI编程助手的辅助，我能够更高效地完成开发任务，为未来的项目打下了坚实的基础。未来，我计划在此基础上添加更多功能，进一步提升应用的实用性和用户体验。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢DataWhale提供的学习平台和资源，以及豆包AI编程助手在开发过程中的有力支持。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://zh.wikipedia.org/wiki/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E6%B3%95">番茄工作法</a></li><li><a href="https://www.datawhale.cn/activity/116/23/94?rankingPage=1">Datawhale</a></li><li><a href="https://www.marscode.cn/home?utm_source=school&utm_medium=datawhalelearn&utm_campaign=camp1">豆包AI编程助手</a></li></ul><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a><code>index.html</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>番茄时钟<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.tailwindcss.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 自定义样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.timer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Helvetica Neue&#x27;</span>, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">5rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.buttons</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span><span class="selector-class">.start</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#4caf50</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span><span class="selector-class">.start</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#45a049</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span><span class="selector-class">.pause</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff9800</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span><span class="selector-class">.pause</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f57c00</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span><span class="selector-class">.reset</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f44336</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.button</span><span class="selector-class">.reset</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#e53935</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#stats</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Arial, sans-serif&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;bg-gray-100 flex items-center justify-center h-screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bg-white p-8 rounded shadow-md w-96&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;text-2xl font-semibold mb-4&quot;</span>&gt;</span>番茄时钟<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;timer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;timer text-4xl font-bold text-gray-700&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex mt-8 buttons&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button start&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button pause&quot;</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;stats&quot;</span>&gt;</span>已完成番茄钟次数：0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="script-js"><a href="#script-js" class="headerlink" title="script.js"></a><code>script.js</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timer;</span><br><span class="line"><span class="keyword">let</span> isRunning = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> time = <span class="number">1500</span>; <span class="comment">// 25分钟</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> timerDisplay = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;timer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> startBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;start&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> pauseBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> resetBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;reset&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> statsDisplay = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;stats&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateDisplay</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> minutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>(time / <span class="number">60</span>);</span><br><span class="line">    <span class="keyword">const</span> seconds = time % <span class="number">60</span>;</span><br><span class="line">    timerDisplay.<span class="property">textContent</span> = <span class="string">`<span class="subst">$&#123;minutes.toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>:<span class="subst">$&#123;seconds.toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateStats</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> count = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;pomodoroCount&#x27;</span>) || <span class="number">0</span>;</span><br><span class="line">    statsDisplay.<span class="property">textContent</span> = <span class="string">`已完成番茄钟次数：<span class="subst">$&#123;count&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startTimer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isRunning) <span class="keyword">return</span>;</span><br><span class="line">    isRunning = <span class="literal">true</span>;</span><br><span class="line">    timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            time--;</span><br><span class="line">            <span class="title function_">updateDisplay</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            isRunning = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">let</span> count = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;pomodoroCount&#x27;</span>) || <span class="number">0</span>;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;pomodoroCount&#x27;</span>, count);</span><br><span class="line">            <span class="title function_">updateStats</span>();</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;时间到！&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pauseTimer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">    isRunning = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resetTimer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">    isRunning = <span class="literal">false</span>;</span><br><span class="line">    time = <span class="number">1500</span>;</span><br><span class="line">    <span class="title function_">updateDisplay</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">startBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, startTimer);</span><br><span class="line">pauseBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, pauseTimer);</span><br><span class="line">resetBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, resetTimer);</span><br><span class="line"></span><br><span class="line"><span class="title function_">updateDisplay</span>();</span><br><span class="line"><span class="title function_">updateStats</span>();</span><br></pre></td></tr></table></figure><h3 id="styles-css"><a href="#styles-css" class="headerlink" title="styles.css"></a><code>styles.css</code></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#timer</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.controls</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#stats</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;番茄钟开发学习笔记&quot;&gt;&lt;a href=&quot;#番茄钟开发学习笔记&quot; class=&quot;headerlink&quot; title=&quot;番茄钟开发学习笔记&quot;&gt;&lt;/a&gt;番茄钟开发学习笔记&lt;/h1&gt;&lt;h2 id=&quot;项目简介&quot;&gt;&lt;a href=&quot;#项目简介&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>实现 Shell 的 clear 命令</title>
    <link href="http://example.com/2024/12/23/OS-32Bit/"/>
    <id>http://example.com/2024/12/23/OS-32Bit/</id>
    <published>2024-12-23T03:38:46.000Z</published>
    <updated>2024-12-23T04:39:35.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>&ensp;在这篇博客中，我将分享如何在一个操作系统项目<a href="https://github.com/IlanVinograd/OS_32Bit">IlanVinograd&#x2F;OS_32Bit</a>中实现 clear 命令，进行清屏，然后重置光标定位到左上角的问题。</p><h2 id="开始遇到的问题"><a href="#开始遇到的问题" class="headerlink" title="开始遇到的问题"></a>开始遇到的问题</h2><p>&ensp;一开始我遇到的问题是 Docker，这个项目的作者提供了 Dockerfile 文件来帮助配置环境，但是国内就连不上 Docker ( QvQ 或许有，但是我暂时不知道怎么搞，放到后续去学吧)。所以我就按照 Dockerfile 文件在本地安装了依赖，在本地编译所需要的工具，像 binutils 和 gcc-i686-elf ，并配置好环境变量，很顺利地在本地运行起了项目，不得不说项目作者很有水平。</p><p>&ensp;在操作系统的 Shell 中，clear 命令用于清空屏幕并将光标重置到左上角。一开始我是在 Code&#x2F;Kernel&#x2F;Sources&#x2F;shell.c 文件中的 handleBackgroundColor 函数中识别 clear 命令，然后调用 clearScreen 函数进行清屏，在调用 setCursorPosition 函数将光标重置到左上角。但是这样进行处理有一点问题。 输入 clear 命令后要按下回车，有一个专门的函数 handle_enter 函数会覆盖掉我对 setCursorPosition 函数的调用， handle_enter 函数会自动将光标定位到下一行开头。所以我就在这个函数里也对 clear 命令进行识别，然后刷新输入缓冲区，退出即可。</p><p>&ensp;正当我兴致勃勃的想要向项目作者申请 issue 的 assign 时，并发起 Pull request 时，我不小心在本地合并分支到了 main 分支。虽然我学习过 git 的使用，但是确实用的太少了，导致很多命令不熟悉，进行了误操作，后续写一篇博客总结总结。所以又重新 clone 了项目， 进行修改。这次我突然想到为何要在 handleBackgroundColor 函数里识别 clear 命令呢？直接在 handle_enter 统一处理所有的 shell 命令不就行了。这里补充一点，项目作者实现了这个 32 位操作系统的整体框架，大部分 shell 命令都没有实现。在我进行的时候仅仅只实现了一个 test 测试命令。当然正是这个命令启发了我，让我使用最少的代码、最小的修改完成了这个功能。一开始我还使用关中断的方式实现原子操作来实现清屏与光标重定位，虽然没成功，但 exp++，哈哈。</p><h2 id="修改内容"><a href="#修改内容" class="headerlink" title="修改内容"></a>修改内容</h2><ol><li>更新 handle_enter 函数<br>&ensp;首先，我在 handle_enter 函数中添加了对 clear 命令的处理逻辑。具体来说，当检测到输入的命令不是 clear 时，将光标移动到下一行的开头。否则，清空屏幕并将光标重置到左上角。</li></ol><p>修改前：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">handle_enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">uint16_t</span> row = keyboard_cursor_position / VGA_COLS;</span><br><span class="line">    <span class="type">uint16_t</span> col = keyboard_cursor_position % VGA_COLS;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clear the blinking cursor before processing</span></span><br><span class="line">    <span class="built_in">setCursorPosition</span>(row, col);</span><br><span class="line">    <span class="built_in">putc</span>(<span class="string">&#x27; &#x27;</span>, COLOR_BLACK_ON_WHITE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Shell Functions</span></span><br><span class="line">    <span class="built_in">scrollIfNeeded</span>(row);</span><br><span class="line">    <span class="built_in">handleBackgroundColor</span>(inputBuffer);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//test temp</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">uint8_t</span>*)inputBuffer, (<span class="type">uint8_t</span>*)<span class="string">&quot;test&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">create_task</span>((<span class="type">uintptr_t</span>)test);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// end test temp</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Move cursor to the next line</span></span><br><span class="line">    row++;</span><br><span class="line">    <span class="keyword">if</span> (row &gt;= VGA_ROWS) &#123;</span><br><span class="line">        <span class="comment">// Scroll again if we&#x27;re still at the last row</span></span><br><span class="line">        <span class="built_in">scroll_screen</span>();</span><br><span class="line">        row = VGA_ROWS - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    keyboard_cursor_position = row * VGA_COLS;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setCursorPosition</span>(row, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Reset input buffer to default size</span></span><br><span class="line">    <span class="built_in">free</span>(inputBuffer); <span class="comment">// Free the current buffer</span></span><br><span class="line">    inputBufferSize = <span class="number">256</span>; <span class="comment">// Reset the buffer size</span></span><br><span class="line">    inputBuffer = (<span class="type">char</span>*)<span class="built_in">malloc</span>(inputBufferSize); <span class="comment">// Allocate a new buffer</span></span><br><span class="line">    <span class="keyword">if</span> (!inputBuffer) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error: Could not reallocate input buffer.\n&quot;</span>, RED_ON_BLACK_WARNING);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    inputBuffer[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">// Initialize the buffer</span></span><br><span class="line">    inputBufferIndex = <span class="number">0</span>;  <span class="comment">// Reset the index</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改后</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">handle_enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">uint16_t</span> row = keyboard_cursor_position / VGA_COLS;</span><br><span class="line">    <span class="type">uint16_t</span> col = keyboard_cursor_position % VGA_COLS;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Clear the blinking cursor before processing</span></span><br><span class="line">    <span class="built_in">setCursorPosition</span>(row, col);</span><br><span class="line">    <span class="built_in">putc</span>(<span class="string">&#x27; &#x27;</span>, COLOR_BLACK_ON_WHITE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Shell Functions</span></span><br><span class="line">    <span class="built_in">scrollIfNeeded</span>(row);</span><br><span class="line">    <span class="built_in">handleBackgroundColor</span>(inputBuffer);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//test temp</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">uint8_t</span>*)inputBuffer, (<span class="type">uint8_t</span>*)<span class="string">&quot;test&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">create_task</span>((<span class="type">uintptr_t</span>)test);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// end test temp</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Move cursor to the next line if it is not clear command</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>((<span class="type">uint8_t</span>*)inputBuffer, (<span class="type">uint8_t</span>*)<span class="string">&quot;clear&quot;</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        row++;</span><br><span class="line">        <span class="keyword">if</span> (row &gt;= VGA_ROWS) &#123;</span><br><span class="line">            <span class="comment">// Scroll again if we&#x27;re still at the last row</span></span><br><span class="line">            <span class="built_in">scroll_screen</span>();</span><br><span class="line">            row = VGA_ROWS - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        keyboard_cursor_position = row * VGA_COLS;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">setCursorPosition</span>(row, <span class="number">0</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">clearScreen</span>();</span><br><span class="line">        keyboard_cursor_position = <span class="number">2</span> * VGA_COLS;</span><br><span class="line">        <span class="built_in">setCursorPosition</span>(<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Reset input buffer to default size</span></span><br><span class="line">    <span class="built_in">free</span>(inputBuffer); <span class="comment">// Free the current buffer</span></span><br><span class="line">    inputBufferSize = <span class="number">256</span>; <span class="comment">// Reset the buffer size</span></span><br><span class="line">    inputBuffer = (<span class="type">char</span>*)<span class="built_in">malloc</span>(inputBufferSize); <span class="comment">// Allocate a new buffer</span></span><br><span class="line">    <span class="keyword">if</span> (!inputBuffer) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Error: Could not reallocate input buffer.\n&quot;</span>, RED_ON_BLACK_WARNING);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    inputBuffer[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">// Initialize the buffer</span></span><br><span class="line">    inputBufferIndex = <span class="number">0</span>;  <span class="comment">// Reset the index</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>修复 clearScreen 函数<br>&ensp;接下来，我修复了 clearScreen 函数，使其从行索引 2 开始清除，而不是原先的行索引 3。从索引 2 开始清除是因为项目作者在前两行打印了系统的一些信息。这里估计是项目作者一时疏忽。</li></ol><p>&ensp;为了确保修改后的代码正常工作，我重新编译，使用 qemu 模拟器(有没有大佬教教我怎么掌握这玩意儿，网上教程好少)启动这个系统，接下来：</p><ul><li>在 Shell 中输入 clear 命令并按下回车。</li><li>验证屏幕是否被清空，并且光标是否正确定位到左上角。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&ensp;通过上述修改，我成功实现了 Shell 的 clear 命令。现在，输入 clear 命令后，屏幕会被清空，光标正确定位到左上角，同时不影响其他命令的正常运行。<br>&ensp;简单总结一下 git 的使用。首先将项目仓库 fork 到自己的 GitHub，然后从自己的 Github 将项目 clone 到本地。创建新的分支 new_branch_name（随便取的名字，只是做一个例子），在这个分支上进行修改。修改完毕后 git add 提交修改的文件，然后 git commit -m 对所进行的修改进行描述，使用双引号 “ 开头，可以实现多行描述，最后使用双引号 “ 结尾即可。一般 commit 的第一行对实现的功能或者修改进行大致描述，然后空一行详细描述做出的修改，比如修改了那个文件的那个函数等等。空一行是为了在执行 git log –oneline 时只展示大致描述，而不展示详细描述。做完上述工作后执行 git push origin new_branch_name 命令，然后登陆 Github 到自己的仓库页面，就可以看到 Create pull request 按钮提示你有一个合并请求。点击后像 commit 一样填写 decription 即可。如果你的 commit 只有一个它会自动帮你填写成你的 commit 。否则不会帮你自动填写。这样就算是一个完整的 PR 啦！<br>&ensp;总结一句话就是收获满满！<br>&ensp;希望这篇博客对您有所帮助。如果您有任何问题或建议，欢迎在评论区留言（评论区还没搓好，待续啦）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h1&gt;&lt;p&gt;&amp;ensp;在这篇博客中，我将分享如何在一个操作系统项目&lt;a href=&quot;https://github.com/IlanVinograd/O</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello, this is Malone!</title>
    <link href="http://example.com/2024/12/18/Hello-this-is-Malone/"/>
    <id>http://example.com/2024/12/18/Hello-this-is-Malone/</id>
    <published>2024-12-18T14:41:40.000Z</published>
    <updated>2024-12-18T14:45:29.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到我的个人博客"><a href="#欢迎来到我的个人博客" class="headerlink" title="欢迎来到我的个人博客"></a>欢迎来到我的个人博客</h1><p>大家好！我是Malone，欢迎来到我的个人博客。在这里，我将分享我对人工智能和编程的热情与探索。</p><h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>从小我就对计算机充满了好奇心，尤其是AI和编程。随着时间的推移，我不断学习和实践，逐渐积累了一些经验和知识。现在，我希望通过这个博客，与大家分享我的学习心得和项目经验。</p><h1 id="博客目标"><a href="#博客目标" class="headerlink" title="博客目标"></a>博客目标</h1><p>这个博客的主要目标是：</p><ul><li><strong>分享知识</strong>：无论你是初学者还是有经验的开发者，我都希望我的文章能对你有所帮助。</li><li><strong>记录学习过程</strong>：通过记录我的学习过程，我希望能更好地理解和掌握AI和编程相关的知识。</li><li><strong>交流互动</strong>：我非常期待与大家交流，互相学习，共同进步。</li></ul><h1 id="未来计划"><a href="#未来计划" class="headerlink" title="未来计划"></a>未来计划</h1><p>在接下来的时间里，我计划撰写以下几个方面的内容：</p><!-- - **AI基础**：介绍AI的基本概念和原理。 --><ul><li><strong>编程教程</strong>：分享一些编程语言（主要是Python、C、C++）的教程和技巧。</li><li><strong>项目实战</strong>：展示一些实际项目的开发过程和心得体会。</li><li><strong>最新动态</strong>：分享AI和编程领域的最新研究成果和技术动态。</li></ul><h1 id="互动交流"><a href="#互动交流" class="headerlink" title="互动交流"></a>互动交流</h1><p>我非常欢迎大家在文章下方留言，提出问题或建议。你也可以通过邮箱<a href="mailto:&#x66;&#97;&#118;&#111;&#x72;&#105;&#x74;&#101;&#x2e;&#x76;&#97;&#x6d;&#x70;&#105;&#114;&#x65;&#x40;&#x71;&#113;&#46;&#99;&#111;&#x6d;">&#x66;&#97;&#118;&#111;&#x72;&#105;&#x74;&#101;&#x2e;&#x76;&#97;&#x6d;&#x70;&#105;&#114;&#x65;&#x40;&#x71;&#113;&#46;&#99;&#111;&#x6d;</a>与我取得联系，让我们一起交流和探讨。</p><h1 id="ending"><a href="#ending" class="headerlink" title="ending"></a>ending</h1><p>感谢你读到这里！希望我的博客能对你有所帮助。下一篇文章，我将介绍AI的基本概念，敬请期待！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;欢迎来到我的个人博客&quot;&gt;&lt;a href=&quot;#欢迎来到我的个人博客&quot; class=&quot;headerlink&quot; title=&quot;欢迎来到我的个人博客&quot;&gt;&lt;/a&gt;欢迎来到我的个人博客&lt;/h1&gt;&lt;p&gt;大家好！我是Malone，欢迎来到我的个人博客。在这里，我将分享我对人工智能</summary>
      
    
    
    
    
  </entry>
  
</feed>
